# =============================================================================
# UDT Store Environment Configuration
# =============================================================================
# Copy this file to .env for local development
# For production, set these variables in your deployment platform (Vercel)

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Local Development (Docker PostgreSQL)
DATABASE_URL="postgresql://postgres:postgres123@localhost:5432/udt-store-db"

# Production (Vercel Postgres) - Set in Vercel dashboard
# DATABASE_URL="postgres://REDACTED_DATABASE_CREDENTIALS"
# PRISMA_DATABASE_URL="prisma+postgres://REDACTED_PRISMA_CREDENTIALS"

# =============================================================================
# AUTHENTICATION
# =============================================================================
# Generate a secure secret key (32+ characters)
# You can use: openssl rand -base64 32
NEXTAUTH_SECRET="your-super-secret-key-change-in-production-min-32-chars"

# Local Development
NEXTAUTH_URL="http://localhost:3000"

# Production - Set in Vercel dashboard
# NEXTAUTH_URL="https://your-portfolio.vercel.app"

# =============================================================================
# STRIPE PAYMENT INTEGRATION
# =============================================================================
# Test keys for development
STRIPE_PUBLISHABLE_KEY="pk_test_your_stripe_publishable_key_here"
STRIPE_SECRET_KEY="sk_test_your_stripe_secret_key_here"
STRIPE_WEBHOOK_SECRET="whsec_your_stripe_webhook_secret_here"

# Production - Set live keys in Vercel dashboard
# STRIPE_PUBLISHABLE_KEY="pk_live_your_live_publishable_key"
# STRIPE_SECRET_KEY="sk_live_your_live_secret_key"
# STRIPE_WEBHOOK_SECRET="whsec_your_live_webhook_secret"

# =============================================================================
# CLOUDINARY IMAGE STORAGE (OPTIONAL)
# =============================================================================
# For cloud image storage - get these from Cloudinary Dashboard
# CLOUDINARY_CLOUD_NAME="your_cloud_name"
# CLOUDINARY_API_KEY="your_api_key"
# CLOUDINARY_API_SECRET="your_api_secret"

# =============================================================================
# FILE UPLOAD SETTINGS
# =============================================================================
# Maximum file size in bytes (5MB = 5242880)
MAX_FILE_SIZE=5242880
# Upload directory for local storage
UPLOAD_DIR="/app/uploads"

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
NODE_ENV="development"
NEXT_TELEMETRY_DISABLED=1

# Optional: For enhanced logging
# LOG_LEVEL="info"

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Update DATABASE_URL with your local PostgreSQL credentials
# 3. Generate NEXTAUTH_SECRET: openssl rand -base64 32
# 4. Add your Stripe test keys from Stripe Dashboard
# 5. For production deployment, set these in Vercel environment variables