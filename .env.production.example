# =============================================================================
# UDT Store Production Environment Variables
# =============================================================================
# Set these variables in your Vercel deployment dashboard
# Dashboard: https://vercel.com/dashboard -> Your Project -> Settings -> Environment Variables

# =============================================================================
# DATABASE (VERCEL POSTGRES)
# =============================================================================
# Get this from: Vercel Dashboard -> Storage -> Postgres -> .env.local tab
DATABASE_URL="postgres://e02f0a86c6e9b9011d2158ea37593734e3029830cb04552c64686091ee0b9734:sk_I8g2nem2KHaom08WG8fAc@db.prisma.io:5432/?sslmode=require"
PRISMA_DATABASE_URL="prisma+postgres://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5IjoiMDFKWjdHMjY1Rzk4WUtIQlo1RTFBUDhNUFMiLCJ0ZW5hbnRfaWQiOiJlMDJmMGE4NmM2ZTliOTAxMWQyMTU4ZWEzNzU5MzczNGUzMDI5ODMwY2IwNDU1MmM2NDY4NjA5MWVlMGI5NzM0IiwiaW50ZXJuYWxfc2VjcmV0IjoiMjk3N2VhMDItY2JmNS00ZjgyLWI2NmQtYzI3NzdjNTQzMTA4In0.sM7CoLNfi4rX4VM5CshyELrZpo4ZoFl2FUBGOxCJaEw"

# =============================================================================
# AUTHENTICATION
# =============================================================================
# Generate secure 32+ character secret: openssl rand -base64 32
NEXTAUTH_SECRET="your-super-secure-production-secret-key-min-32-characters-long"

# Your production URL
NEXTAUTH_URL="https://your-portfolio-name.vercel.app"

# =============================================================================
# STRIPE PAYMENT (PRODUCTION)
# =============================================================================
# Live keys from Stripe Dashboard (for portfolio, you can use test keys)
STRIPE_PUBLISHABLE_KEY="pk_live_your_live_stripe_publishable_key"
STRIPE_SECRET_KEY="sk_live_your_live_stripe_secret_key"
STRIPE_WEBHOOK_SECRET="whsec_your_live_stripe_webhook_secret"

# For portfolio/demo, use test keys:
# STRIPE_PUBLISHABLE_KEY="pk_test_your_test_stripe_publishable_key"
# STRIPE_SECRET_KEY="sk_test_your_test_stripe_secret_key"
# STRIPE_WEBHOOK_SECRET="whsec_your_test_stripe_webhook_secret"

# =============================================================================
# CLOUDINARY IMAGE STORAGE (RECOMMENDED FOR VERCEL)
# =============================================================================
# For cloud image storage - get these from Cloudinary Dashboard
CLOUDINARY_CLOUD_NAME="your_cloud_name"
CLOUDINARY_API_KEY="your_api_key"
CLOUDINARY_API_SECRET="your_api_secret"

# =============================================================================
# FILE UPLOAD SETTINGS
# =============================================================================
MAX_FILE_SIZE=5242880

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
NODE_ENV="production"

# =============================================================================
# HOW TO SET IN VERCEL
# =============================================================================
# Option 1: Vercel Dashboard
# 1. Go to https://vercel.com/dashboard
# 2. Select your project
# 3. Go to Settings -> Environment Variables  
# 4. Add each variable above with its value
# 5. Set Environment: Production
# 6. Save and redeploy

# Option 2: Vercel CLI
# vercel env add DATABASE_URL
# vercel env add NEXTAUTH_SECRET
# vercel env add NEXTAUTH_URL
# vercel env add STRIPE_PUBLISHABLE_KEY
# vercel env add STRIPE_SECRET_KEY
# vercel env add NODE_ENV

# =============================================================================
# VERCEL POSTGRES SETUP
# =============================================================================
# 1. Install Vercel CLI: npm i -g vercel
# 2. Login: vercel login
# 3. Create database: vercel postgres create udt-store-db
# 4. Get connection string from Vercel dashboard
# 5. Add DATABASE_URL to environment variables
# 6. Deploy and run: npx prisma migrate deploy